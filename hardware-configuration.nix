# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot = {
    loader = {
      timeout = 3;
      systemd-boot.enable = false;
      efi = {
        canTouchEfiVariables = true;
      };
      grub = {
        enable = true;
        device = "nodev";
        useOSProber = false;
        efiSupport = true;
        default = "saved";
        theme = "${pkgs.libsForQt5.breeze-grub}/grub/themes/breeze";
        gfxmodeEfi = "auto";
        gfxmodeBios = "auto";
        extraEntries = ''
          submenu "Power Options" {
            menuentry "Reboot" {
              reboot
            }

            menuentry "Poweroff" {
              halt
            }

            menuentry "UEFI Firmware Settings" {
              fwsetup
            }
          }
        '';
      };
    };
    initrd.availableKernelModules = [
      "xhci_pci"
      "nvme"
      "usb_storage"
      "sd_mod"
      "sdhci_pci"
    ];
    initrd.kernelModules = [ ];
    kernelModules = [ "kvm-intel" ];
    kernelParams = [
      #"i915.force_probe=46d2"
      "fbcon=rotate:1"
      #"video=DSI-1:panel_orientation=right"
    ];
    supportedFilesystems = [
      "auto"
      "ntfs"
      "ext4"
      "vfat"
    ];
    extraModulePackages = [ ];
  };
  hardware = {
    graphics = {
      enable = true;
      extraPackages = with pkgs; [
        intel-compute-runtime
        intel-media-driver
        intel-ocl
        intel-vaapi-driver
        #rocmPackages.clr.icd
        #rocm-opencl-icd
        #rocm-opencl-runtime
        #rocmPackages.rocm-runtime
      ];
    };
    bluetooth.enable = true;
    intel-gpu-tools.enable = true;
    cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
    #sensor.iio.enable = true;
    pulseaudio.enable = false;
  };

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/503ddd03-bb50-4cac-962f-533ecbe72bed";
    fsType = "ext4";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/2038-6320";
    fsType = "vfat";
    options = [
      "fmask=0077"
      "dmask=0077"
    ];
  };

  swapDevices = [ { device = "/dev/disk/by-uuid/10d2a3ba-7e6f-434e-8ed3-ab3ccc0428cb"; } ];
  networking = {
    hostName = "YuYuL";
    networkmanager.enable = true;
    useDHCP = lib.mkDefault true; # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;
    firewall.enable = false;
    # firewall.allowedTCPPorts = [ ... ];
  };
  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
}
